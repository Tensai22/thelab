<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="a" xml:space="preserve">
    <value>Video Production Webflow Template</value>
  </data>
  <data name="b" xml:space="preserve">
    <value>3 Landing Pages. 16 Inner Pages.</value>
  </data>
  <data name="c" xml:space="preserve">
    <value>Ultra performance</value>
  </data>
  <data name="d" xml:space="preserve">
    <value>Load your site with a lightning-fast responsiveness. An optimized code lets Thelab load fast under any traffic conditions.</value>
  </data>
  <data name="e" xml:space="preserve">
    <value>Performance Grade</value>
  </data>
  <data name="f" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="g" xml:space="preserve">
    <value>Key Features</value>
  </data>
  <data name="h" xml:space="preserve">
    <value>Friendly Support</value>
  </data>
  <data name="i" xml:space="preserve">
    <value>Found a bug, or have any problem, feel free to send us an email at</value>
  </data>
  <data name="j" xml:space="preserve">
    <value>Search Engine Optimised</value>
  </data>
  <data name="k" xml:space="preserve">
    <value>Get ranking in SERPs. Template is optimised for search engines requirements.</value>
  </data>
  <data name="l" xml:space="preserve">
    <value>Custom Typography</value>
  </data>
  <data name="m" xml:space="preserve">
    <value>Template allows you to adjust Typography and choose custom Colors to suit your needs.</value>
  </data>
  <data name="n" xml:space="preserve">
    <value>Essential Inner pages</value>
  </data>
  <data name="o" xml:space="preserve">
    <value>Limitless potential in creating the pages you need. We’ve created essential page layouts including: About, Pricing, Contact, and more.</value>
  </data>
  <data name="p" xml:space="preserve">
    <value>Modern Technologies</value>
  </data>
  <data name="q" xml:space="preserve">
    <value>Template is well designed and highly targeted for conversions. Built with HTML, CSS, and Javascript in a visual canvas.</value>
  </data>
  <data name="r" xml:space="preserve">
    <value>High-Speed Performance</value>
  </data>
  <data name="s" xml:space="preserve">
    <value>Load your site with a lightning-fast responsiveness. An optimized code lets template load fast under any traffic conditions.</value>
  </data>
  <data name="t" xml:space="preserve">
    <value>Lifetime Updates</value>
  </data>
  <data name="u" xml:space="preserve">
    <value>Stay up-to-date with the latest version of our template without having to do it manually.</value>
  </data>
  <data name="v" xml:space="preserve">
    <value>Highly Customisable</value>
  </data>
  <data name="w" xml:space="preserve">
    <value>Make your website look the way you want it to by customising it with our built-in tools and settings - with no coding skills required!</value>
  </data>
  <data name="x" xml:space="preserve">
    <value>Inner Pages</value>
  </data>
  <data name="y" xml:space="preserve">
    <value>Limitless potential in creating the pages you need. We’ve created essential page layouts including: About Us, Services, Works, and more.</value>
  </data>
  <data name="z" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="za" xml:space="preserve">
    <value>Our Team</value>
  </data>
  <data name="zb" xml:space="preserve">
    <value>Our Services</value>
  </data>
  <data name="zc" xml:space="preserve">
    <value>Service Details</value>
  </data>
  <data name="zd" xml:space="preserve">
    <value>Our Works</value>
  </data>
  <data name="ze" xml:space="preserve">
    <value>Work Details</value>
  </data>
  <data name="zf" xml:space="preserve">
    <value>Testimonials</value>
  </data>
  <data name="zg" xml:space="preserve">
    <value>Pricing</value>
  </data>
  <data name="zh" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="zi" xml:space="preserve">
    <value>Blog Details</value>
  </data>
  <data name="zj" xml:space="preserve">
    <value>Balance of External and Internal Beauty</value>
  </data>
  <data name="zk" xml:space="preserve">
    <value>Start building your next gorgeous website now.</value>
  </data>
  <data name="zl" xml:space="preserve">
    <value>Purchase</value>
  </data>
</root>